name: Release APK and Deploy Web

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write # needed to create releases and upload assets

jobs:
  build-release-and-deploy:
    runs-on: ubuntu-latest
    env:
      FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
      FIREBASE_PROJECT_ID: kachuful-88b5c
      FIREBASE_SERVICE_ACCOUNT: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Java (JDK 17)
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      - name: Install Android SDK components
        run: |
          sdkmanager --install "platform-tools" "platforms;android-34" "build-tools;34.0.0"
          yes | sdkmanager --licenses

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true

      - name: Flutter version
        run: flutter --version

      - name: Enable Flutter web
        run: flutter config --enable-web

      - name: Flutter doctor (diagnostics)
        run: flutter doctor -v

      - name: Install dependencies
        run: flutter pub get

      - name: Build Android APK (release)
        run: flutter build apk --release

      - name: Build web (release, offline-first)
        run: flutter build web --release --pwa-strategy=offline-first

      - name: Compute release tag
        id: meta
        run: echo "tag=v$(date -u +'%Y%m%d-%H%M')" >> $GITHUB_OUTPUT

      - name: Create GitHub Release and upload APK
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.meta.outputs.tag }}
          name: Kachuful Android release (${{ steps.meta.outputs.tag }})
          files: build/app/outputs/flutter-apk/app-release.apk
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Install Firebase CLI
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Firebase Tools
        run: npm install -g firebase-tools

      - name: Set up Firebase Service Account credentials (preferred)
        if: ${{ env.FIREBASE_SERVICE_ACCOUNT != '' }}
        run: |
          echo "${{ env.FIREBASE_SERVICE_ACCOUNT }}" > "${{ runner.temp }}/gcp-creds.json"
          echo "GOOGLE_APPLICATION_CREDENTIALS=${{ runner.temp }}/gcp-creds.json" >> $GITHUB_ENV

      - name: Deploy to Firebase Hosting (service account)
        if: ${{ env.GOOGLE_APPLICATION_CREDENTIALS != '' }}
        run: firebase deploy --only hosting --project $FIREBASE_PROJECT_ID --non-interactive

      - name: Deploy to Firebase Hosting (FIREBASE_TOKEN fallback)
        if: ${{ env.GOOGLE_APPLICATION_CREDENTIALS == '' && env.FIREBASE_TOKEN != '' }}
        run: firebase deploy --only hosting --project $FIREBASE_PROJECT_ID --non-interactive

      - name: Skip Hosting deploy (no credentials)
        if: ${{ env.GOOGLE_APPLICATION_CREDENTIALS == '' && env.FIREBASE_TOKEN == '' }}
        run: echo "No Firebase credentials set; set FIREBASE_SERVICE_ACCOUNT (recommended) or FIREBASE_TOKEN to enable Hosting deploy."